steps:
  - id: Save ssh key
    name: gcr.io/cloud-builders/git
    args:
      - '-c'
      - |
        echo "$$GITHUB_DEPLOY_KEY" > /root/.ssh/id_ed25519
        chmod 400 /root/.ssh/id_ed25519
        ssh-keyscan github.com > /root/.ssh/known_hosts
    entrypoint: bash
    secretEnv:
      - GITHUB_DEPLOY_KEY
    volumes:
      - name: ssh
        path: /root/.ssh

  - id: Delete existing folder
    name: node:16.13.2
    entrypoint: bash
    args: ['-c', 'find . -delete']

  - id: Clone the repo
    name: gcr.io/cloud-builders/git
    args:
      - clone
      - 'git@github.com:spy4x/seed.git'
      - .
    volumes:
      - name: ssh
        path: /root/.ssh

  - id: Checkout the branch
    name: gcr.io/cloud-builders/git
    args:
      - checkout
      - $COMMIT_SHA

  - id: Restore cache
    name: 'gcr.io/$PROJECT_ID/restore_cache'
    args:
      - '--bucket=gs://${PROJECT_ID}_cloudbuild_cache'
      - '--key=cache-$( checksum yarn.lock )'
      - '--key_fallback=cache-'

  - id: Install dependencies
    name: gcr.io/$PROJECT_ID/builder
    entrypoint: bash
    args: ['-c', 'yarn ci:install-deps']
    env:
      - 'YARN_CACHE_FOLDER=/workspace/.cache/.yarn'

  - id: Save cache
    name: 'gcr.io/$PROJECT_ID/save_cache'
    args:
      - '--bucket=gs://${PROJECT_ID}_cloudbuild_cache'
      - '--key=cache-$( checksum yarn.lock )'
      - '--path=.cache'
      - '--no-clobber'

  - id: deploy
    name: gcr.io/$PROJECT_ID/builder
    entrypoint: bash
    args:
      - -c
      - |-
        export \
        PROJECT_ID=$PROJECT_ID \
        REGION=$$REGION \
        CLOUD_RUN_API_APP_NAME=$$CLOUD_RUN_API_APP_NAME \
        API_URL=$$API_URL \
        DB_CONNECTION_STRING=$$DB_CONNECTION_STRING \
        INSTANCE_CONNECTION_NAME=$$INSTANCE_CONNECTION_NAME \
        FRONT_ADMIN_PANEL_HOSTING_TARGET=$$FRONT_ADMIN_PANEL_HOSTING_TARGET \
        FRONT_WEB_CLIENT_HOSTING_TARGET=$$FRONT_WEB_CLIENT_HOSTING_TARGET \
        NX_CLOUD_AUTH_TOKEN=$$NX_CLOUD_AUTH_TOKEN \
        API_KEY_CLOUD_TASKS=$$API_KEY_CLOUD_TASKS \
        && yarn ci:deploy
    secretEnv:
      [
        REGION,
        CLOUD_RUN_API_APP_NAME,
        API_URL,
        DB_CONNECTION_STRING,
        INSTANCE_CONNECTION_NAME,
        FRONT_ADMIN_PANEL_HOSTING_TARGET,
        FRONT_WEB_CLIENT_HOSTING_TARGET,
        NX_CLOUD_AUTH_TOKEN,
        API_KEY_CLOUD_TASKS,
      ]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/GITHUB_DEPLOY_KEY/versions/latest
      env: GITHUB_DEPLOY_KEY
    - versionName: projects/$PROJECT_ID/secrets/REGION/versions/latest
      env: REGION
    - versionName: projects/$PROJECT_ID/secrets/CLOUD_RUN_API_APP_NAME/versions/latest
      env: CLOUD_RUN_API_APP_NAME
    - versionName: projects/$PROJECT_ID/secrets/API_URL/versions/latest
      env: API_URL
    - versionName: projects/$PROJECT_ID/secrets/DB_CONNECTION_STRING/versions/latest
      env: DB_CONNECTION_STRING
    - versionName: projects/$PROJECT_ID/secrets/INSTANCE_CONNECTION_NAME/versions/latest
      env: INSTANCE_CONNECTION_NAME
    - versionName: projects/$PROJECT_ID/secrets/FRONT_ADMIN_PANEL_HOSTING_TARGET/versions/latest
      env: FRONT_ADMIN_PANEL_HOSTING_TARGET
    - versionName: projects/$PROJECT_ID/secrets/FRONT_WEB_CLIENT_HOSTING_TARGET/versions/latest
      env: FRONT_WEB_CLIENT_HOSTING_TARGET
    - versionName: projects/$PROJECT_ID/secrets/NX_CLOUD_AUTH_TOKEN/versions/latest
      env: NX_CLOUD_AUTH_TOKEN
    - versionName: projects/$PROJECT_ID/secrets/API_KEY_CLOUD_TASKS/versions/latest
      env: API_KEY_CLOUD_TASKS

timeout: 900s

options:
  machineType: 'N1_HIGHCPU_8'
