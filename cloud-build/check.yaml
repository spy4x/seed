steps:
  - id: restore_cache
    name: 'gcr.io/$PROJECT_ID/restore_cache'
    args:
      - '--bucket=gs://${PROJECT_ID}_cloudbuild_cache'
      - '--key=cache-$( checksum yarn.lock )'
      - '--key_fallback=cache-'

  - id: install_deps
    name: node
    entrypoint: bash
    args: ['-c', 'yarn ci:install-deps']
    env:
      - 'YARN_CACHE_FOLDER=/workspace/.cache/.yarn'

  - id: format
    name: node
    entrypoint: bash
    args: ['-c', 'yarn ci:format']

  - id: lint
    name: node
    entrypoint: bash
    args: ['-c', 'NX_CLOUD_AUTH_TOKEN=$$NX_CLOUD_AUTH_TOKEN yarn ci:lint']
    secretEnv: [NX_CLOUD_AUTH_TOKEN]

  - id: test
    name: node
    entrypoint: bash
    args: ['-c', 'NX_CLOUD_AUTH_TOKEN=$$NX_CLOUD_AUTH_TOKEN yarn ci:test']
    secretEnv: [NX_CLOUD_AUTH_TOKEN]

  - id: build
    name: node
    entrypoint: bash
    args: ['-c', 'NX_CLOUD_AUTH_TOKEN=$$NX_CLOUD_AUTH_TOKEN yarn ci:build']
    secretEnv: [NX_CLOUD_AUTH_TOKEN]

  - id: e2e
    name: cypress/base
    entrypoint: bash
    args: ['-c', 'NX_CLOUD_AUTH_TOKEN=$$NX_CLOUD_AUTH_TOKEN yarn ci:e2e']
    secretEnv: [NX_CLOUD_AUTH_TOKEN]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/NX_CLOUD_AUTH_TOKEN/versions/latest
      env: NX_CLOUD_AUTH_TOKEN

timeout: 1800s
